package service

import (
	"fmt"

	"gitlab.com/soluqa/bookio/service-generator/internal/utils"
)

func Generate(wd string, module string) {
	data := map[string]string{"module": module}
	code := utils.ExecuteAndFormat(serviceUtilsT, data)
	utils.ForceSave(fmt.Sprintf("%s/internal/service/utils.go", wd), code)
}

var serviceUtilsT = utils.CreateTemplate(`
// Code generated by go generate; DO NOT EDIT.
package service

import (
	"context"
	appContext "{{.module}}/internal/context"
)

const system = "system"

// GetLogin returns user userID from context or "system" if no userID was found
func GetUserID(ctx context.Context) string {
	userID := ctx.Value(appContext.USER_ID)
	if userID == nil {
		return system
	}
	return userID.(string)
}

// GetCompany returns company from context when available
func GetCompany(ctx context.Context) string {
	company := ctx.Value(appContext.COMPANY)
	if company == nil {
		return ""
	}
	return company.(string)
}
`)
