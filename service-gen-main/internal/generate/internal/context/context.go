package context

import (
	"fmt"

	"gitlab.com/soluqa/bookio/service-generator/internal/utils"
)

func Generate(wd string) {
	code := utils.ExecuteAndFormat(contextT, nil)
	utils.ForceSave(fmt.Sprintf("%s/internal/context/context.go", wd), code)
}

var contextT = utils.CreateTemplate(`
// Code generated by go generate; DO NOT EDIT.
package context

import "context"

type APP_CONTEXT string

var (
	COMPANY        APP_CONTEXT = "COMPANY"
	USER_ID        APP_CONTEXT = "USER_ID"
	REQUESTID      APP_CONTEXT = "REQUEST_ID"

	CLIENT_NAME string = "CLIENT_NAME"
	CLIENT_OP   string = "CLIENT_OP"
)

// NewApplicationContext prepares main application context with cancel function
func NewApplicationContext() (context.Context, context.CancelFunc) {
	return context.WithCancel(context.Background())
}
`)
