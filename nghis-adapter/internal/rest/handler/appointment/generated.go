// Code generated by go generate; DO NOT EDIT.
// Generator version: v3.0.1
package appointment

import (
	"github.com/arfis/waiting-room/nghis-adapter/internal/data/dto"
	ngErrors "github.com/arfis/waiting-room/nghis-adapter/internal/errors"
	"github.com/arfis/waiting-room/nghis-adapter/internal/rest/handler"
	"github.com/arfis/waiting-room/nghis-adapter/internal/service/appointment"
	"net/http"
)

type Handler struct {
	svc                  *appointment.Service
	responseErrorHandler *ngErrors.ResponseErrorHandler
}

func New(
	svc *appointment.Service,
	responseErrorHandler *ngErrors.ResponseErrorHandler,
) *Handler {
	return &Handler{
		svc:                  svc,
		responseErrorHandler: responseErrorHandler,
	}
}

func (h *Handler) GetAppointmentsForPatient(w http.ResponseWriter, r *http.Request) {
	var applicationErr error
	nationalID := handler.PathParamToString(r, "nationalID")
	var resp []dto.AppointmentResp
	resp, applicationErr = h.svc.GetAppointmentsForPatient(
		r.Context(),
		nationalID,
	)
	if applicationErr != nil {
		h.responseErrorHandler.HandleAndWriteError(w, r, applicationErr)
		return
	}
	handler.WriteJson(r.Context(), w, 200, resp)
}
