// Code generated by go generate; DO NOT EDIT.

package service

import (
	"context"
	"log/slog"
	"math"
	"strings"

	nghisContext "github.com/arfis/waiting-room/nghis-adapter/internal/context"
)

const system = "system"

func GetSortString(sort []string) string {
	return strings.Join(sort, ", ")
}

// GetLogin returns user login from context or "system" if no login was found
func GetLogin(ctx context.Context) string {
	login := ctx.Value(nghisContext.LOGIN)
	if login == nil {
		return system
	}
	if loginString, ok := login.(string); ok {
		return loginString
	}
	slog.ErrorContext(ctx, "login in context is not string")
	return system
}

// GetTenant returns tenant from context
func GetTenant(ctx context.Context) int32 {
	tenant := ctx.Value(nghisContext.TENANT)
	if tenant == nil {
		return 0
	}
	if tenantID, ok := tenant.(int32); ok {
		return tenantID
	}
	slog.ErrorContext(ctx, "tenant in context is not int32")
	return 0
}

func SafeInt64ToInt32(v int64) int32 {
	if v > math.MaxInt32 {
		return math.MaxInt32
	}
	if v < math.MinInt32 {
		return math.MinInt32
	}
	return int32(v)
}
