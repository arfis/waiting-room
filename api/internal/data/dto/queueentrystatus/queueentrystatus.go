// Code generated by go generate; DO NOT EDIT.
package queueentrystatus

import (
	"fmt"
	"github.com/arfis/waiting-room/internal/errors"
)

type QueueEntryStatus string

var (
	UNKNOWN_VALUE QueueEntryStatus = "UNKNOWN_VALUE"
	WAITING       QueueEntryStatus = "WAITING"
	CALLED        QueueEntryStatus = "CALLED"
	IN_SERVICE    QueueEntryStatus = "IN_SERVICE"
	COMPLETED     QueueEntryStatus = "COMPLETED"
	SKIPPED       QueueEntryStatus = "SKIPPED"
	CANCELLED     QueueEntryStatus = "CANCELLED"
	NO_SHOW       QueueEntryStatus = "NO_SHOW"
)

// String gets the string representation of the QueueEntryStatus
func (c QueueEntryStatus) String() string {
	return string(c)
}

func StringToQueueEntryStatus(source string) (QueueEntryStatus, error) {
	switch source {
	case string(WAITING):
		return WAITING, nil
	case string(CALLED):
		return CALLED, nil
	case string(IN_SERVICE):
		return IN_SERVICE, nil
	case string(COMPLETED):
		return COMPLETED, nil
	case string(SKIPPED):
		return SKIPPED, nil
	case string(CANCELLED):
		return CANCELLED, nil
	case string(NO_SHOW):
		return NO_SHOW, nil
	default:
		return "UNKNOWN_VALUE", errors.Validation(fmt.Errorf("invalid value ('%s') passed to QueueEntryStatus", source), nil)
	}
}
