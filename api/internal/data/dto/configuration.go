// Code generated by go generate; DO NOT EDIT.
package dto

type ConfigurationResponse struct {
	AllowWildcard bool                `json:"allowWildcard"`
	DefaultRoom   string              `json:"defaultRoom" validate:"required"`
	Rooms         []RoomConfiguration `json:"rooms" validate:"required,dive"`
	WebSocketPath string              `json:"webSocketPath" validate:"required"`
}

func (configurationResponse ConfigurationResponse) GetAllowWildcard() bool {
	return configurationResponse.AllowWildcard
}

func (configurationResponse ConfigurationResponse) GetDefaultRoom() string {
	return configurationResponse.DefaultRoom
}

func (configurationResponse ConfigurationResponse) GetRooms() []RoomConfiguration {
	return configurationResponse.Rooms
}

func (configurationResponse ConfigurationResponse) GetWebSocketPath() string {
	return configurationResponse.WebSocketPath
}

type RoomConfiguration struct {
	ID            string                      `json:"ID" validate:"required"`
	Name          string                      `json:"name" validate:"required"`
	ServicePoints []ServicePointConfiguration `json:"servicePoints" validate:"required,dive"`
}

func (roomConfiguration RoomConfiguration) GetID() string {
	return roomConfiguration.ID
}

func (roomConfiguration RoomConfiguration) GetName() string {
	return roomConfiguration.Name
}

func (roomConfiguration RoomConfiguration) GetServicePoints() []ServicePointConfiguration {
	return roomConfiguration.ServicePoints
}

type ServicePointConfiguration struct {
	ID          string  `json:"ID" validate:"required"`
	Description *string `json:"description,omitempty"`
	ManagerID   *string `json:"managerID,omitempty"`
	ManagerName *string `json:"managerName,omitempty"`
	Name        string  `json:"name" validate:"required"`
}

func (servicePointConfiguration ServicePointConfiguration) GetID() string {
	return servicePointConfiguration.ID
}

func (servicePointConfiguration ServicePointConfiguration) GetDescription() string {
	var v string
	if servicePointConfiguration.Description != nil {
		return *servicePointConfiguration.Description
	}
	return v
}

func (servicePointConfiguration ServicePointConfiguration) GetManagerID() string {
	var v string
	if servicePointConfiguration.ManagerID != nil {
		return *servicePointConfiguration.ManagerID
	}
	return v
}

func (servicePointConfiguration ServicePointConfiguration) GetManagerName() string {
	var v string
	if servicePointConfiguration.ManagerName != nil {
		return *servicePointConfiguration.ManagerName
	}
	return v
}

func (servicePointConfiguration ServicePointConfiguration) GetName() string {
	return servicePointConfiguration.Name
}
