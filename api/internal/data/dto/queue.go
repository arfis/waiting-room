// Code generated by go generate; DO NOT EDIT.
package dto

import "github.com/arfis/waiting-room/internal/data/dto/queueentrystatus"

type PublicEntry struct {
	CanCancel    bool                              `json:"canCancel"`
	EntryId      string                            `json:"entryId" validate:"required"`
	EtaMinutes   int                               `json:"etaMinutes"`
	Position     int                               `json:"position"`
	Status       queueentrystatus.QueueEntryStatus `json:"status" validate:"required"`
	TicketNumber string                            `json:"ticketNumber" validate:"required"`
}

func (publicEntry PublicEntry) GetCanCancel() bool {
	return publicEntry.CanCancel
}

func (publicEntry PublicEntry) GetEntryId() string {
	return publicEntry.EntryId
}

func (publicEntry PublicEntry) GetEtaMinutes() int {
	return publicEntry.EtaMinutes
}

func (publicEntry PublicEntry) GetPosition() int {
	return publicEntry.Position
}

func (publicEntry PublicEntry) GetStatus() queueentrystatus.QueueEntryStatus {
	return publicEntry.Status
}

func (publicEntry PublicEntry) GetTicketNumber() string {
	return publicEntry.TicketNumber
}

type QueueEntry struct {
	Id            string                            `json:"id" validate:"required"`
	Position      int                               `json:"position"`
	Status        queueentrystatus.QueueEntryStatus `json:"status" validate:"required"`
	TicketNumber  string                            `json:"ticketNumber" validate:"required"`
	WaitingRoomId string                            `json:"waitingRoomId" validate:"required"`
}

func (queueEntry QueueEntry) GetId() string {
	return queueEntry.Id
}

func (queueEntry QueueEntry) GetPosition() int {
	return queueEntry.Position
}

func (queueEntry QueueEntry) GetStatus() queueentrystatus.QueueEntryStatus {
	return queueEntry.Status
}

func (queueEntry QueueEntry) GetTicketNumber() string {
	return queueEntry.TicketNumber
}

func (queueEntry QueueEntry) GetWaitingRoomId() string {
	return queueEntry.WaitingRoomId
}
