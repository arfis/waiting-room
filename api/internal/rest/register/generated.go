// Code generated by go generate; DO NOT EDIT.
package register

import (
	"github.com/arfis/waiting-room/internal/middleware"
	"github.com/arfis/waiting-room/internal/rest/handler/admin"
	"github.com/arfis/waiting-room/internal/rest/handler/configuration"
	"github.com/arfis/waiting-room/internal/rest/handler/kiosk"
	"github.com/arfis/waiting-room/internal/rest/handler/queue"
	"github.com/arfis/waiting-room/internal/rest/handler/servicepoint"
	"github.com/go-chi/chi/v5"
	"go.uber.org/dig"
)

func Generated(r chi.Router, diContainer *dig.Container) {
	err := diContainer.Invoke(func(
		adminHandler *admin.Handler,
		kioskHandler *kiosk.Handler,
		configurationHandler *configuration.Handler,
		servicepointHandler *servicepoint.Handler,
		queueHandler *queue.Handler,
		authorizationMiddleware *middleware.AuthorizationMiddleware,
	) error {

		// Protected routes (require JWT)
		r.With(authorizationMiddleware.Middleware()).Group(func(protected chi.Router) {
			protected.Get("/admin/card-readers", adminHandler.GetCardReaders)
			protected.Post("/admin/card-readers/{id}/restart", adminHandler.RestartCardReader)
			protected.Get("/admin/configuration", adminHandler.GetSystemConfiguration)
			protected.Put("/admin/configuration", adminHandler.UpdateSystemConfiguration)
			protected.Get("/admin/configuration/external-api", adminHandler.GetExternalAPIConfiguration)
			protected.Put("/admin/configuration/external-api", adminHandler.UpdateExternalAPIConfiguration)
			protected.Get("/admin/configuration/rooms", adminHandler.GetRoomsConfiguration)
			protected.Put("/admin/configuration/rooms", adminHandler.UpdateRoomsConfiguration)
			protected.Delete("/admin/translation/cache", adminHandler.ClearTranslationCache)
			protected.Get("/admin/translation/cache/stats", adminHandler.GetTranslationCacheStats)
			protected.Get("/appointment-services", kioskHandler.GetAppointmentServices)
			protected.Get("/config", configurationHandler.GetConfiguration)
			protected.Get("/generic-services", kioskHandler.GetGenericServices)
			protected.Get("/managers/status", servicepointHandler.GetManagerStatus)
			protected.Post("/managers/{managerId}/login", servicepointHandler.ManagerLogin)
			protected.Post("/managers/{managerId}/logout", servicepointHandler.ManagerLogout)
			protected.Get("/queue-entries/token/{qrToken}", queueHandler.GetQueueEntryByToken)
			protected.Get("/user-services", kioskHandler.GetUserServices)
			protected.Post("/waiting-rooms/{roomId}/finish", queueHandler.FinishCurrent)
			protected.Get("/waiting-rooms/{roomId}/managers/status", servicepointHandler.GetManagerStatusForRoom)
			protected.Get("/waiting-rooms/{roomId}/queue", queueHandler.GetQueueEntries)
			protected.Get("/waiting-rooms/{roomId}/service-points", queueHandler.GetServicePoints)
			protected.Post("/waiting-rooms/{roomId}/service-points/{servicePointId}/finish-current", queueHandler.FinishCurrentForServicePoint)
			protected.Post("/waiting-rooms/{roomId}/service-points/{servicePointId}/mark-in-room", queueHandler.MarkInRoomForServicePoint)
			protected.Post("/waiting-rooms/{roomId}/service-points/{servicePointId}/next", queueHandler.CallNext)
			protected.Post("/waiting-rooms/{roomId}/swipe", kioskHandler.SwipeCard)

		})

		return nil
	})

	if err != nil {
		panic(err)
	}
}
