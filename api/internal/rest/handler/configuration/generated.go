// Code generated by go generate; DO NOT EDIT.
package configuration

import (
	"github.com/arfis/waiting-room/internal/data/dto"
	ngErrors "github.com/arfis/waiting-room/internal/errors"
	"github.com/arfis/waiting-room/internal/rest/handler"
	"github.com/arfis/waiting-room/internal/service/configuration"
	"net/http"
)

type Handler struct {
	svc                  *configuration.Service
	responseErrorHandler *ngErrors.ResponseErrorHandler
}

func New(
	svc *configuration.Service,
	responseErrorHandler *ngErrors.ResponseErrorHandler,
) *Handler {
	return &Handler{
		svc:                  svc,
		responseErrorHandler: responseErrorHandler,
	}
}

func (h *Handler) GetConfiguration(w http.ResponseWriter, r *http.Request) {
	var applicationErr error
	var resp *dto.ConfigurationResponse
	resp, applicationErr = h.svc.GetConfiguration(
		r.Context(),
	)
	if applicationErr != nil {
		h.responseErrorHandler.HandleAndWriteError(w, r, applicationErr)
		return
	}
	handler.WriteJson(r.Context(), w, 200, resp)
}
